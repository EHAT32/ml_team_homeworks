import streamlit as st
import requests
from requests.exceptions import ConnectionError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API
ip_api = "api-service"
port_api = "5000"

# –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –∏–∫–æ–Ω–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="Insurance Predictor", page_icon="üöó")

# –°—Ç–∏–ª–∏
st.markdown("""
    <style>
        .title {
            font-size: 32px;
            font-weight: bold;
            color: #4CAF50;
            margin-bottom: 20px;
        }
        .stButton > button {
            background-color: #4CAF50;
            color: white;
            border-radius: 8px;
            padding: 10px 20px;
        }
        .stButton > button:hover {
            background-color: #45a049;
        }
    </style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown('<div class="title">Insurance Prediction</div>', unsafe_allow_html=True)

st.markdown("Please enter the details below to get a prediction:")

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–æ–Ω–∫–∏
col1, col2 = st.columns(2)

with col1:
    previously_insured = st.checkbox("Previously Insured", help="–í—ã–±–µ—Ä–∏—Ç–µ, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Ä–∞–Ω–µ–µ –±—ã–ª –∑–∞—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω")
    vehicle_damage = st.checkbox("Vehicle Damage", help="–í—ã–±–µ—Ä–∏—Ç–µ, –µ—Å–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –±—ã–ª–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–æ")

with col2:
    vehicleAge = st.selectbox("Vehicle Age", ["< 1 Year", "1-2 Year", "> 2 Years"], help="–í–æ–∑—Ä–∞—Å—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞")
    policySalesChannel = st.text_input("Policy Sales Channel", value=152, help="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ–¥–∞–∂ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
if not policySalesChannel.isdigit():
    st.error("üö´ Please enter a valid number for policy sales channel.")

# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
if st.button("üîç Predict"):
    if policySalesChannel.isdigit():
        data = {
            "Previously_Insured": previously_insured,
            "Vehicle_Age": vehicleAge,
            "Vehicle_Damage": vehicle_damage,
            "Policy_Sales_Channel": int(policySalesChannel)
        }

        try:
            response = requests.post(f"http://{ip_api}:{port_api}/predict_model", json=data)

            if response.status_code == 200:
                response_data = response.json()
                prediction = response.json()["prediction"]
                if "_original_prediction" in response_data:
                    original_value = response_data["_original_prediction"]
                    expected_text = "–ö–ª–∏–µ–Ω—Ç –≤–æ–∑—å–º—ë—Ç —Å—Ç—Ä–∞—Ö–æ–≤–∫—É" if original_value == 1 else "–ö–ª–∏–µ–Ω—Ç –Ω–µ –≤–æ–∑—å–º—ë—Ç —Å—Ç—Ä–∞—Ö–æ–≤–∫—É"
                    
                    if prediction != expected_text:
                        st.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö!")
                        st.error(f"–ü–æ–ª—É—á–µ–Ω–æ: {prediction} | –û–∂–∏–¥–∞–ª–æ—Å—å: {expected_text}")
                    else:
                        st.success("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑:")
                st.metric(label="", value=prediction)
                if prediction == "–ö–ª–∏–µ–Ω—Ç –≤–æ–∑—å–º—ë—Ç —Å—Ç—Ä–∞—Ö–æ–≤–∫—É":
                    st.balloons()
                
                if "history" not in st.session_state:
                    st.session_state.history = []

                st.session_state.history.append(data | {"prediction": prediction})

                st.markdown("---")

                # –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤:
                with st.expander("üïò –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤"):
                    for item in st.session_state.history[::-1]:
                        st.write(item)

            else:
                st.error(f"‚ùå Request failed with status code {response.status_code}")
        except ConnectionError:
            st.error("üîå Failed to connect to the server")
    else:
        st.error("‚ùó Please fill in all fields with valid numbers.")

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown("<center>¬© 2025 Insurance ML Service</center>", unsafe_allow_html=True)
